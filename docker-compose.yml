services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - app-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
      - zookeeper
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
    #      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.15.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-network

  logstash:
    image: logstash:8.15.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "9600:9600"
    depends_on:
      - elasticsearch
    volumes:
      - ./logstash.conf:/usr/share/logstash/datapipeline/logstash.conf
#      - ./logs:/usr/share/logstash/datapipeline/logs
      - logstash-volume:/usr/share/logstash/datapipeline/logs
    environment:
      - xpack.monitoring.elasticsearch.hosts=http://elasticsearch:9200
    networks:
      - app-network

  kibana:
    image: kibana:8.15.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network

  data-pipeline:
    build: .
    ports:
      - "8080:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
      - logstash
    volumes:
      - logstash-volume:/app/logs
      - ./logs:/app/logs
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  logstash-volume:
    driver: local